{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","e","showContactInfo","onDeleteClick","_ref","delete","t0","_x","_x2","_this2","className","name","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","email","phone","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","errors","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e1a1e48.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n  }\r\n\r\n  onShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"secondary-text\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log(\"componentWillMount...\");\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"componentDidUpdate\");\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log(\"componentWillUpdate\");\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log(\"componentWillRecieveProps...\");\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}